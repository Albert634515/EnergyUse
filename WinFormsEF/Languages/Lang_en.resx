<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddressWithDescription" xml:space="preserve">
    <value>There already is an address with description %s</value>
  </data>
  <data name="BackUpAndRestoreCreated" xml:space="preserve">
    <value>Back-up created</value>
  </data>
  <data name="BackUpAndRestoreNoRestoreFileExist" xml:space="preserve">
    <value>No restore file does not exist</value>
  </data>
  <data name="BackUpAndRestoreNoRestoreFileSelected" xml:space="preserve">
    <value>No restore file selected</value>
  </data>
  <data name="BackUpAndRestoreRestoreFile" xml:space="preserve">
    <value>Restore db file</value>
  </data>
  <data name="BackUpAndRestoreSelectFile" xml:space="preserve">
    <value>Please first select an export directory</value>
  </data>
  <data name="CalculatedUnitPriceAskDelete" xml:space="preserve">
    <value>Are you sure you want to delete this unit price?</value>
  </data>
  <data name="ChartCompareTitle" xml:space="preserve">
    <value>Compare data per %s</value>
  </data>
  <data name="ChartCompareTitleMonth" xml:space="preserve">
    <value>Compare data per %s for %m</value>
  </data>
  <data name="ChartDefaultTitle" xml:space="preserve">
    <value>Data per</value>
  </data>
  <data name="ChartRatesTitle" xml:space="preserve">
    <value>Rates</value>
  </data>
  <data name="DataSaved" xml:space="preserve">
    <value>Data has been saved</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="DeleteTitle" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DescriptionIsRequired" xml:space="preserve">
    <value>Description is a required field</value>
  </data>
  <data name="FileAlreadyExists" xml:space="preserve">
    <value>File already exists</value>
  </data>
  <data name="FileExistsOverWrite" xml:space="preserve">
    <value>File already exists, do you want overwrite?</value>
  </data>
  <data name="FixedPrice" xml:space="preserve">
    <value>Fixed price</value>
  </data>
  <data name="ImportBrowseFiles" xml:space="preserve">
    <value>Browse import file</value>
  </data>
  <data name="ImportSelectedFileNotExist" xml:space="preserve">
    <value>Selected file does not exist or is not accessible</value>
  </data>
  <data name="ImportSelectFile" xml:space="preserve">
    <value>Please enter a file to import</value>
  </data>
  <data name="MainErrorDbNotExist" xml:space="preserve">
    <value>Current selected database in the config does not exist or is not accessible, the database needs to be set up before this program can be used.</value>
  </data>
  <data name="MainErrorDbNotSetup" xml:space="preserve">
    <value>Database not set up or not accessible, application will be closed.</value>
  </data>
  <data name="MainRecalculate" xml:space="preserve">
    <value>Do you want to recalculate all data for energytype '%s'</value>
  </data>
  <data name="MainRecalculateAll" xml:space="preserve">
    <value>Recalculate all</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="Newaddress" xml:space="preserve">
    <value>New address</value>
  </data>
  <data name="Newcategory" xml:space="preserve">
    <value>New category</value>
  </data>
  <data name="Newenergytype" xml:space="preserve">
    <value>New energy type</value>
  </data>
  <data name="Newmeter" xml:space="preserve">
    <value>New meter</value>
  </data>
  <data name="Newperiod" xml:space="preserve">
    <value>New period</value>
  </data>
  <data name="NoDataToExport" xml:space="preserve">
    <value>No data to export</value>
  </data>
  <data name="PayBackTimeGreaterZero" xml:space="preserve">
    <value>Purchase amount should be greater then zero</value>
  </data>
  <data name="PayBackTimeNoPricePerUnit" xml:space="preserve">
    <value>There is no price unit for year %s</value>
  </data>
  <data name="PayBackTimeNoReturns" xml:space="preserve">
    <value>There are no energy types that return energy</value>
  </data>
  <data name="PayBackTimeShouldBeNumeric" xml:space="preserve">
    <value>Purchase amount should be a numeric value</value>
  </data>
  <data name="PayBackTimeSubsidyShouldBeNumeric" xml:space="preserve">
    <value>Subsidy amount should be a numeric value</value>
  </data>
  <data name="PaymentAskDelete" xml:space="preserve">
    <value>Are you sure you want to delete this payment</value>
  </data>
  <data name="PredefinedDates" xml:space="preserve">
    <value>predefined dates</value>
  </data>
  <data name="Progress" xml:space="preserve">
    <value>Progress</value>
  </data>
  <data name="RatesAlwaysCalculatedWith" xml:space="preserve">
    <value>Category is always calculated with tarif group: %s</value>
  </data>
  <data name="RatesAskDelete" xml:space="preserve">
    <value>Are you sure you want to delete this rate?</value>
  </data>
  <data name="SelectAddress" xml:space="preserve">
    <value>Select an address</value>
  </data>
  <data name="SelectCategory" xml:space="preserve">
    <value>Select a category</value>
  </data>
  <data name="SelectEnergyType" xml:space="preserve">
    <value>Select an energy type</value>
  </data>
  <data name="SelectMeter" xml:space="preserve">
    <value>Please select a meter</value>
  </data>
  <data name="SelectParametersEndDateLarger" xml:space="preserve">
    <value>End date should be large or equal to start date</value>
  </data>
  <data name="SelectParametersSelectAddress" xml:space="preserve">
    <value>Please select an address to calculate the settlement for</value>
  </data>
  <data name="SelectTarifGroup" xml:space="preserve">
    <value>Select an tarif group</value>
  </data>
  <data name="Staffel" xml:space="preserve">
    <value>Staffel</value>
  </data>
  <data name="TariffGroupsAskDelete" xml:space="preserve">
    <value>Are you sure you want to delete this tarif group?</value>
  </data>
  <data name="TarifGroupNewGroup" xml:space="preserve">
    <value>New group</value>
  </data>
  <data name="ucDataDeleteRate" xml:space="preserve">
    <value>Are you sure you want to delete this rate?</value>
  </data>
  <data name="ucDataNoMeter" xml:space="preserve">
    <value>The current address does not have a meter for %e.%nFirst add a %e before registering new meter registrations</value>
  </data>
  <data name="ucDataRecalculate" xml:space="preserve">
    <value>Do you want to recalculate current selected range for energytype '%s'?</value>
  </data>
  <data name="UnsavedChanges" xml:space="preserve">
    <value>There are unsaved changes are you sure you want to close this form?</value>
  </data>
  <data name="UnsavedChangesTitle" xml:space="preserve">
    <value>Unsaved changes</value>
  </data>
  <data name="Week" xml:space="preserve">
    <value>Week</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Year</value>
  </data>
</root>